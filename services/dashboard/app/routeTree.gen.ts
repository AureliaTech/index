/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as InvestmentsImport } from './routes/investments'
import { Route as FundsImport } from './routes/funds'
import { Route as AiImport } from './routes/ai'
import { Route as IndexImport } from './routes/index'
import { Route as InvestmentsIndexImport } from './routes/investments/index'
import { Route as FundsIndexImport } from './routes/funds/index'
import { Route as SettingsUsersImport } from './routes/settings/users'
import { Route as SettingsThemingImport } from './routes/settings/theming'
import { Route as SettingsSecurityImport } from './routes/settings/security'
import { Route as SettingsRolesImport } from './routes/settings/roles'
import { Route as SettingsProfileImport } from './routes/settings/profile'
import { Route as SettingsPortfolioCompaniesImport } from './routes/settings/portfolio-companies'
import { Route as SettingsNotificationsImport } from './routes/settings/notifications'
import { Route as SettingsLabelsImport } from './routes/settings/labels'
import { Route as SettingsInvestmentsImport } from './routes/settings/investments'
import { Route as SettingsFundsImport } from './routes/settings/funds'
import { Route as SettingsBillingImport } from './routes/settings/billing'
import { Route as SettingsAuditLogsImport } from './routes/settings/audit-logs'
import { Route as InvestmentsNameImport } from './routes/investments/$name'
import { Route as FundsNameImport } from './routes/funds/$name'
import { Route as InvestmentsNameIndexImport } from './routes/investments/$name/index'
import { Route as FundsNameIndexImport } from './routes/funds/$name/index'
import { Route as SettingsUsersInviteImport } from './routes/settings/users/invite'
import { Route as SettingsUsersByUserImport } from './routes/settings/users/by-user'
import { Route as SettingsUsersByRoleImport } from './routes/settings/users/by-role'
import { Route as InvestmentsNameValuationImport } from './routes/investments/$name/valuation'
import { Route as InvestmentsNameShareholdersStructureImport } from './routes/investments/$name/shareholders-structure'
import { Route as InvestmentsNameReportsImport } from './routes/investments/$name/reports'
import { Route as InvestmentsNameInvestmentSummaryImport } from './routes/investments/$name/investment-summary'
import { Route as InvestmentsNameDocumentsImport } from './routes/investments/$name/documents'
import { Route as InvestmentsNameDealTeamHighlightsImport } from './routes/investments/$name/deal-team-highlights'
import { Route as InvestmentsNameDataCollectionImport } from './routes/investments/$name/data-collection'
import { Route as InvestmentsNameDashboardImport } from './routes/investments/$name/dashboard'
import { Route as InvestmentsNameCompanyPerformanceImport } from './routes/investments/$name/company-performance'
import { Route as FundsNameKeyInfoImport } from './routes/funds/$name/key-info'
import { Route as FundsNameInvestmentsImport } from './routes/funds/$name/investments'
import { Route as FundsNameDocumentsImport } from './routes/funds/$name/documents'
import { Route as FundsNameDashboardImport } from './routes/funds/$name/dashboard'
import { Route as FundsNameCashFlowImport } from './routes/funds/$name/cash-flow'
import { Route as InvestmentsNameDealTeamHighlightsNewImport } from './routes/investments/$name/deal-team-highlights/new'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentsRoute = InvestmentsImport.update({
  id: '/investments',
  path: '/investments',
  getParentRoute: () => rootRoute,
} as any)

const FundsRoute = FundsImport.update({
  id: '/funds',
  path: '/funds',
  getParentRoute: () => rootRoute,
} as any)

const AiRoute = AiImport.update({
  id: '/ai',
  path: '/ai',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InvestmentsIndexRoute = InvestmentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InvestmentsRoute,
} as any)

const FundsIndexRoute = FundsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FundsRoute,
} as any)

const SettingsUsersRoute = SettingsUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsThemingRoute = SettingsThemingImport.update({
  id: '/theming',
  path: '/theming',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsSecurityRoute = SettingsSecurityImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsRolesRoute = SettingsRolesImport.update({
  id: '/roles',
  path: '/roles',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsProfileRoute = SettingsProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsPortfolioCompaniesRoute = SettingsPortfolioCompaniesImport.update(
  {
    id: '/portfolio-companies',
    path: '/portfolio-companies',
    getParentRoute: () => SettingsRoute,
  } as any,
)

const SettingsNotificationsRoute = SettingsNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsLabelsRoute = SettingsLabelsImport.update({
  id: '/labels',
  path: '/labels',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsInvestmentsRoute = SettingsInvestmentsImport.update({
  id: '/investments',
  path: '/investments',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsFundsRoute = SettingsFundsImport.update({
  id: '/funds',
  path: '/funds',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsBillingRoute = SettingsBillingImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => SettingsRoute,
} as any)

const SettingsAuditLogsRoute = SettingsAuditLogsImport.update({
  id: '/audit-logs',
  path: '/audit-logs',
  getParentRoute: () => SettingsRoute,
} as any)

const InvestmentsNameRoute = InvestmentsNameImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => InvestmentsRoute,
} as any)

const FundsNameRoute = FundsNameImport.update({
  id: '/$name',
  path: '/$name',
  getParentRoute: () => FundsRoute,
} as any)

const InvestmentsNameIndexRoute = InvestmentsNameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => InvestmentsNameRoute,
} as any)

const FundsNameIndexRoute = FundsNameIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => FundsNameRoute,
} as any)

const SettingsUsersInviteRoute = SettingsUsersInviteImport.update({
  id: '/invite',
  path: '/invite',
  getParentRoute: () => SettingsUsersRoute,
} as any)

const SettingsUsersByUserRoute = SettingsUsersByUserImport.update({
  id: '/by-user',
  path: '/by-user',
  getParentRoute: () => SettingsUsersRoute,
} as any)

const SettingsUsersByRoleRoute = SettingsUsersByRoleImport.update({
  id: '/by-role',
  path: '/by-role',
  getParentRoute: () => SettingsUsersRoute,
} as any)

const InvestmentsNameValuationRoute = InvestmentsNameValuationImport.update({
  id: '/valuation',
  path: '/valuation',
  getParentRoute: () => InvestmentsNameRoute,
} as any)

const InvestmentsNameShareholdersStructureRoute =
  InvestmentsNameShareholdersStructureImport.update({
    id: '/shareholders-structure',
    path: '/shareholders-structure',
    getParentRoute: () => InvestmentsNameRoute,
  } as any)

const InvestmentsNameReportsRoute = InvestmentsNameReportsImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => InvestmentsNameRoute,
} as any)

const InvestmentsNameInvestmentSummaryRoute =
  InvestmentsNameInvestmentSummaryImport.update({
    id: '/investment-summary',
    path: '/investment-summary',
    getParentRoute: () => InvestmentsNameRoute,
  } as any)

const InvestmentsNameDocumentsRoute = InvestmentsNameDocumentsImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => InvestmentsNameRoute,
} as any)

const InvestmentsNameDealTeamHighlightsRoute =
  InvestmentsNameDealTeamHighlightsImport.update({
    id: '/deal-team-highlights',
    path: '/deal-team-highlights',
    getParentRoute: () => InvestmentsNameRoute,
  } as any)

const InvestmentsNameDataCollectionRoute =
  InvestmentsNameDataCollectionImport.update({
    id: '/data-collection',
    path: '/data-collection',
    getParentRoute: () => InvestmentsNameRoute,
  } as any)

const InvestmentsNameDashboardRoute = InvestmentsNameDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => InvestmentsNameRoute,
} as any)

const InvestmentsNameCompanyPerformanceRoute =
  InvestmentsNameCompanyPerformanceImport.update({
    id: '/company-performance',
    path: '/company-performance',
    getParentRoute: () => InvestmentsNameRoute,
  } as any)

const FundsNameKeyInfoRoute = FundsNameKeyInfoImport.update({
  id: '/key-info',
  path: '/key-info',
  getParentRoute: () => FundsNameRoute,
} as any)

const FundsNameInvestmentsRoute = FundsNameInvestmentsImport.update({
  id: '/investments',
  path: '/investments',
  getParentRoute: () => FundsNameRoute,
} as any)

const FundsNameDocumentsRoute = FundsNameDocumentsImport.update({
  id: '/documents',
  path: '/documents',
  getParentRoute: () => FundsNameRoute,
} as any)

const FundsNameDashboardRoute = FundsNameDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => FundsNameRoute,
} as any)

const FundsNameCashFlowRoute = FundsNameCashFlowImport.update({
  id: '/cash-flow',
  path: '/cash-flow',
  getParentRoute: () => FundsNameRoute,
} as any)

const InvestmentsNameDealTeamHighlightsNewRoute =
  InvestmentsNameDealTeamHighlightsNewImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => InvestmentsNameDealTeamHighlightsRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/ai': {
      id: '/ai'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof AiImport
      parentRoute: typeof rootRoute
    }
    '/funds': {
      id: '/funds'
      path: '/funds'
      fullPath: '/funds'
      preLoaderRoute: typeof FundsImport
      parentRoute: typeof rootRoute
    }
    '/investments': {
      id: '/investments'
      path: '/investments'
      fullPath: '/investments'
      preLoaderRoute: typeof InvestmentsImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/funds/$name': {
      id: '/funds/$name'
      path: '/$name'
      fullPath: '/funds/$name'
      preLoaderRoute: typeof FundsNameImport
      parentRoute: typeof FundsImport
    }
    '/investments/$name': {
      id: '/investments/$name'
      path: '/$name'
      fullPath: '/investments/$name'
      preLoaderRoute: typeof InvestmentsNameImport
      parentRoute: typeof InvestmentsImport
    }
    '/settings/audit-logs': {
      id: '/settings/audit-logs'
      path: '/audit-logs'
      fullPath: '/settings/audit-logs'
      preLoaderRoute: typeof SettingsAuditLogsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/billing': {
      id: '/settings/billing'
      path: '/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof SettingsBillingImport
      parentRoute: typeof SettingsImport
    }
    '/settings/funds': {
      id: '/settings/funds'
      path: '/funds'
      fullPath: '/settings/funds'
      preLoaderRoute: typeof SettingsFundsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/investments': {
      id: '/settings/investments'
      path: '/investments'
      fullPath: '/settings/investments'
      preLoaderRoute: typeof SettingsInvestmentsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/labels': {
      id: '/settings/labels'
      path: '/labels'
      fullPath: '/settings/labels'
      preLoaderRoute: typeof SettingsLabelsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/notifications': {
      id: '/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof SettingsNotificationsImport
      parentRoute: typeof SettingsImport
    }
    '/settings/portfolio-companies': {
      id: '/settings/portfolio-companies'
      path: '/portfolio-companies'
      fullPath: '/settings/portfolio-companies'
      preLoaderRoute: typeof SettingsPortfolioCompaniesImport
      parentRoute: typeof SettingsImport
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileImport
      parentRoute: typeof SettingsImport
    }
    '/settings/roles': {
      id: '/settings/roles'
      path: '/roles'
      fullPath: '/settings/roles'
      preLoaderRoute: typeof SettingsRolesImport
      parentRoute: typeof SettingsImport
    }
    '/settings/security': {
      id: '/settings/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof SettingsSecurityImport
      parentRoute: typeof SettingsImport
    }
    '/settings/theming': {
      id: '/settings/theming'
      path: '/theming'
      fullPath: '/settings/theming'
      preLoaderRoute: typeof SettingsThemingImport
      parentRoute: typeof SettingsImport
    }
    '/settings/users': {
      id: '/settings/users'
      path: '/users'
      fullPath: '/settings/users'
      preLoaderRoute: typeof SettingsUsersImport
      parentRoute: typeof SettingsImport
    }
    '/funds/': {
      id: '/funds/'
      path: '/'
      fullPath: '/funds/'
      preLoaderRoute: typeof FundsIndexImport
      parentRoute: typeof FundsImport
    }
    '/investments/': {
      id: '/investments/'
      path: '/'
      fullPath: '/investments/'
      preLoaderRoute: typeof InvestmentsIndexImport
      parentRoute: typeof InvestmentsImport
    }
    '/funds/$name/cash-flow': {
      id: '/funds/$name/cash-flow'
      path: '/cash-flow'
      fullPath: '/funds/$name/cash-flow'
      preLoaderRoute: typeof FundsNameCashFlowImport
      parentRoute: typeof FundsNameImport
    }
    '/funds/$name/dashboard': {
      id: '/funds/$name/dashboard'
      path: '/dashboard'
      fullPath: '/funds/$name/dashboard'
      preLoaderRoute: typeof FundsNameDashboardImport
      parentRoute: typeof FundsNameImport
    }
    '/funds/$name/documents': {
      id: '/funds/$name/documents'
      path: '/documents'
      fullPath: '/funds/$name/documents'
      preLoaderRoute: typeof FundsNameDocumentsImport
      parentRoute: typeof FundsNameImport
    }
    '/funds/$name/investments': {
      id: '/funds/$name/investments'
      path: '/investments'
      fullPath: '/funds/$name/investments'
      preLoaderRoute: typeof FundsNameInvestmentsImport
      parentRoute: typeof FundsNameImport
    }
    '/funds/$name/key-info': {
      id: '/funds/$name/key-info'
      path: '/key-info'
      fullPath: '/funds/$name/key-info'
      preLoaderRoute: typeof FundsNameKeyInfoImport
      parentRoute: typeof FundsNameImport
    }
    '/investments/$name/company-performance': {
      id: '/investments/$name/company-performance'
      path: '/company-performance'
      fullPath: '/investments/$name/company-performance'
      preLoaderRoute: typeof InvestmentsNameCompanyPerformanceImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/dashboard': {
      id: '/investments/$name/dashboard'
      path: '/dashboard'
      fullPath: '/investments/$name/dashboard'
      preLoaderRoute: typeof InvestmentsNameDashboardImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/data-collection': {
      id: '/investments/$name/data-collection'
      path: '/data-collection'
      fullPath: '/investments/$name/data-collection'
      preLoaderRoute: typeof InvestmentsNameDataCollectionImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/deal-team-highlights': {
      id: '/investments/$name/deal-team-highlights'
      path: '/deal-team-highlights'
      fullPath: '/investments/$name/deal-team-highlights'
      preLoaderRoute: typeof InvestmentsNameDealTeamHighlightsImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/documents': {
      id: '/investments/$name/documents'
      path: '/documents'
      fullPath: '/investments/$name/documents'
      preLoaderRoute: typeof InvestmentsNameDocumentsImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/investment-summary': {
      id: '/investments/$name/investment-summary'
      path: '/investment-summary'
      fullPath: '/investments/$name/investment-summary'
      preLoaderRoute: typeof InvestmentsNameInvestmentSummaryImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/reports': {
      id: '/investments/$name/reports'
      path: '/reports'
      fullPath: '/investments/$name/reports'
      preLoaderRoute: typeof InvestmentsNameReportsImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/shareholders-structure': {
      id: '/investments/$name/shareholders-structure'
      path: '/shareholders-structure'
      fullPath: '/investments/$name/shareholders-structure'
      preLoaderRoute: typeof InvestmentsNameShareholdersStructureImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/valuation': {
      id: '/investments/$name/valuation'
      path: '/valuation'
      fullPath: '/investments/$name/valuation'
      preLoaderRoute: typeof InvestmentsNameValuationImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/settings/users/by-role': {
      id: '/settings/users/by-role'
      path: '/by-role'
      fullPath: '/settings/users/by-role'
      preLoaderRoute: typeof SettingsUsersByRoleImport
      parentRoute: typeof SettingsUsersImport
    }
    '/settings/users/by-user': {
      id: '/settings/users/by-user'
      path: '/by-user'
      fullPath: '/settings/users/by-user'
      preLoaderRoute: typeof SettingsUsersByUserImport
      parentRoute: typeof SettingsUsersImport
    }
    '/settings/users/invite': {
      id: '/settings/users/invite'
      path: '/invite'
      fullPath: '/settings/users/invite'
      preLoaderRoute: typeof SettingsUsersInviteImport
      parentRoute: typeof SettingsUsersImport
    }
    '/funds/$name/': {
      id: '/funds/$name/'
      path: '/'
      fullPath: '/funds/$name/'
      preLoaderRoute: typeof FundsNameIndexImport
      parentRoute: typeof FundsNameImport
    }
    '/investments/$name/': {
      id: '/investments/$name/'
      path: '/'
      fullPath: '/investments/$name/'
      preLoaderRoute: typeof InvestmentsNameIndexImport
      parentRoute: typeof InvestmentsNameImport
    }
    '/investments/$name/deal-team-highlights/new': {
      id: '/investments/$name/deal-team-highlights/new'
      path: '/new'
      fullPath: '/investments/$name/deal-team-highlights/new'
      preLoaderRoute: typeof InvestmentsNameDealTeamHighlightsNewImport
      parentRoute: typeof InvestmentsNameDealTeamHighlightsImport
    }
  }
}

// Create and export the route tree

interface FundsNameRouteChildren {
  FundsNameCashFlowRoute: typeof FundsNameCashFlowRoute
  FundsNameDashboardRoute: typeof FundsNameDashboardRoute
  FundsNameDocumentsRoute: typeof FundsNameDocumentsRoute
  FundsNameInvestmentsRoute: typeof FundsNameInvestmentsRoute
  FundsNameKeyInfoRoute: typeof FundsNameKeyInfoRoute
  FundsNameIndexRoute: typeof FundsNameIndexRoute
}

const FundsNameRouteChildren: FundsNameRouteChildren = {
  FundsNameCashFlowRoute: FundsNameCashFlowRoute,
  FundsNameDashboardRoute: FundsNameDashboardRoute,
  FundsNameDocumentsRoute: FundsNameDocumentsRoute,
  FundsNameInvestmentsRoute: FundsNameInvestmentsRoute,
  FundsNameKeyInfoRoute: FundsNameKeyInfoRoute,
  FundsNameIndexRoute: FundsNameIndexRoute,
}

const FundsNameRouteWithChildren = FundsNameRoute._addFileChildren(
  FundsNameRouteChildren,
)

interface FundsRouteChildren {
  FundsNameRoute: typeof FundsNameRouteWithChildren
  FundsIndexRoute: typeof FundsIndexRoute
}

const FundsRouteChildren: FundsRouteChildren = {
  FundsNameRoute: FundsNameRouteWithChildren,
  FundsIndexRoute: FundsIndexRoute,
}

const FundsRouteWithChildren = FundsRoute._addFileChildren(FundsRouteChildren)

interface InvestmentsNameDealTeamHighlightsRouteChildren {
  InvestmentsNameDealTeamHighlightsNewRoute: typeof InvestmentsNameDealTeamHighlightsNewRoute
}

const InvestmentsNameDealTeamHighlightsRouteChildren: InvestmentsNameDealTeamHighlightsRouteChildren =
  {
    InvestmentsNameDealTeamHighlightsNewRoute:
      InvestmentsNameDealTeamHighlightsNewRoute,
  }

const InvestmentsNameDealTeamHighlightsRouteWithChildren =
  InvestmentsNameDealTeamHighlightsRoute._addFileChildren(
    InvestmentsNameDealTeamHighlightsRouteChildren,
  )

interface InvestmentsNameRouteChildren {
  InvestmentsNameCompanyPerformanceRoute: typeof InvestmentsNameCompanyPerformanceRoute
  InvestmentsNameDashboardRoute: typeof InvestmentsNameDashboardRoute
  InvestmentsNameDataCollectionRoute: typeof InvestmentsNameDataCollectionRoute
  InvestmentsNameDealTeamHighlightsRoute: typeof InvestmentsNameDealTeamHighlightsRouteWithChildren
  InvestmentsNameDocumentsRoute: typeof InvestmentsNameDocumentsRoute
  InvestmentsNameInvestmentSummaryRoute: typeof InvestmentsNameInvestmentSummaryRoute
  InvestmentsNameReportsRoute: typeof InvestmentsNameReportsRoute
  InvestmentsNameShareholdersStructureRoute: typeof InvestmentsNameShareholdersStructureRoute
  InvestmentsNameValuationRoute: typeof InvestmentsNameValuationRoute
  InvestmentsNameIndexRoute: typeof InvestmentsNameIndexRoute
}

const InvestmentsNameRouteChildren: InvestmentsNameRouteChildren = {
  InvestmentsNameCompanyPerformanceRoute:
    InvestmentsNameCompanyPerformanceRoute,
  InvestmentsNameDashboardRoute: InvestmentsNameDashboardRoute,
  InvestmentsNameDataCollectionRoute: InvestmentsNameDataCollectionRoute,
  InvestmentsNameDealTeamHighlightsRoute:
    InvestmentsNameDealTeamHighlightsRouteWithChildren,
  InvestmentsNameDocumentsRoute: InvestmentsNameDocumentsRoute,
  InvestmentsNameInvestmentSummaryRoute: InvestmentsNameInvestmentSummaryRoute,
  InvestmentsNameReportsRoute: InvestmentsNameReportsRoute,
  InvestmentsNameShareholdersStructureRoute:
    InvestmentsNameShareholdersStructureRoute,
  InvestmentsNameValuationRoute: InvestmentsNameValuationRoute,
  InvestmentsNameIndexRoute: InvestmentsNameIndexRoute,
}

const InvestmentsNameRouteWithChildren = InvestmentsNameRoute._addFileChildren(
  InvestmentsNameRouteChildren,
)

interface InvestmentsRouteChildren {
  InvestmentsNameRoute: typeof InvestmentsNameRouteWithChildren
  InvestmentsIndexRoute: typeof InvestmentsIndexRoute
}

const InvestmentsRouteChildren: InvestmentsRouteChildren = {
  InvestmentsNameRoute: InvestmentsNameRouteWithChildren,
  InvestmentsIndexRoute: InvestmentsIndexRoute,
}

const InvestmentsRouteWithChildren = InvestmentsRoute._addFileChildren(
  InvestmentsRouteChildren,
)

interface SettingsUsersRouteChildren {
  SettingsUsersByRoleRoute: typeof SettingsUsersByRoleRoute
  SettingsUsersByUserRoute: typeof SettingsUsersByUserRoute
  SettingsUsersInviteRoute: typeof SettingsUsersInviteRoute
}

const SettingsUsersRouteChildren: SettingsUsersRouteChildren = {
  SettingsUsersByRoleRoute: SettingsUsersByRoleRoute,
  SettingsUsersByUserRoute: SettingsUsersByUserRoute,
  SettingsUsersInviteRoute: SettingsUsersInviteRoute,
}

const SettingsUsersRouteWithChildren = SettingsUsersRoute._addFileChildren(
  SettingsUsersRouteChildren,
)

interface SettingsRouteChildren {
  SettingsAuditLogsRoute: typeof SettingsAuditLogsRoute
  SettingsBillingRoute: typeof SettingsBillingRoute
  SettingsFundsRoute: typeof SettingsFundsRoute
  SettingsInvestmentsRoute: typeof SettingsInvestmentsRoute
  SettingsLabelsRoute: typeof SettingsLabelsRoute
  SettingsNotificationsRoute: typeof SettingsNotificationsRoute
  SettingsPortfolioCompaniesRoute: typeof SettingsPortfolioCompaniesRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  SettingsRolesRoute: typeof SettingsRolesRoute
  SettingsSecurityRoute: typeof SettingsSecurityRoute
  SettingsThemingRoute: typeof SettingsThemingRoute
  SettingsUsersRoute: typeof SettingsUsersRouteWithChildren
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsAuditLogsRoute: SettingsAuditLogsRoute,
  SettingsBillingRoute: SettingsBillingRoute,
  SettingsFundsRoute: SettingsFundsRoute,
  SettingsInvestmentsRoute: SettingsInvestmentsRoute,
  SettingsLabelsRoute: SettingsLabelsRoute,
  SettingsNotificationsRoute: SettingsNotificationsRoute,
  SettingsPortfolioCompaniesRoute: SettingsPortfolioCompaniesRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  SettingsRolesRoute: SettingsRolesRoute,
  SettingsSecurityRoute: SettingsSecurityRoute,
  SettingsThemingRoute: SettingsThemingRoute,
  SettingsUsersRoute: SettingsUsersRouteWithChildren,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/ai': typeof AiRoute
  '/funds': typeof FundsRouteWithChildren
  '/investments': typeof InvestmentsRouteWithChildren
  '/settings': typeof SettingsRouteWithChildren
  '/funds/$name': typeof FundsNameRouteWithChildren
  '/investments/$name': typeof InvestmentsNameRouteWithChildren
  '/settings/audit-logs': typeof SettingsAuditLogsRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/funds': typeof SettingsFundsRoute
  '/settings/investments': typeof SettingsInvestmentsRoute
  '/settings/labels': typeof SettingsLabelsRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/settings/portfolio-companies': typeof SettingsPortfolioCompaniesRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/roles': typeof SettingsRolesRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/settings/theming': typeof SettingsThemingRoute
  '/settings/users': typeof SettingsUsersRouteWithChildren
  '/funds/': typeof FundsIndexRoute
  '/investments/': typeof InvestmentsIndexRoute
  '/funds/$name/cash-flow': typeof FundsNameCashFlowRoute
  '/funds/$name/dashboard': typeof FundsNameDashboardRoute
  '/funds/$name/documents': typeof FundsNameDocumentsRoute
  '/funds/$name/investments': typeof FundsNameInvestmentsRoute
  '/funds/$name/key-info': typeof FundsNameKeyInfoRoute
  '/investments/$name/company-performance': typeof InvestmentsNameCompanyPerformanceRoute
  '/investments/$name/dashboard': typeof InvestmentsNameDashboardRoute
  '/investments/$name/data-collection': typeof InvestmentsNameDataCollectionRoute
  '/investments/$name/deal-team-highlights': typeof InvestmentsNameDealTeamHighlightsRouteWithChildren
  '/investments/$name/documents': typeof InvestmentsNameDocumentsRoute
  '/investments/$name/investment-summary': typeof InvestmentsNameInvestmentSummaryRoute
  '/investments/$name/reports': typeof InvestmentsNameReportsRoute
  '/investments/$name/shareholders-structure': typeof InvestmentsNameShareholdersStructureRoute
  '/investments/$name/valuation': typeof InvestmentsNameValuationRoute
  '/settings/users/by-role': typeof SettingsUsersByRoleRoute
  '/settings/users/by-user': typeof SettingsUsersByUserRoute
  '/settings/users/invite': typeof SettingsUsersInviteRoute
  '/funds/$name/': typeof FundsNameIndexRoute
  '/investments/$name/': typeof InvestmentsNameIndexRoute
  '/investments/$name/deal-team-highlights/new': typeof InvestmentsNameDealTeamHighlightsNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/ai': typeof AiRoute
  '/settings': typeof SettingsRouteWithChildren
  '/settings/audit-logs': typeof SettingsAuditLogsRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/funds': typeof SettingsFundsRoute
  '/settings/investments': typeof SettingsInvestmentsRoute
  '/settings/labels': typeof SettingsLabelsRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/settings/portfolio-companies': typeof SettingsPortfolioCompaniesRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/roles': typeof SettingsRolesRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/settings/theming': typeof SettingsThemingRoute
  '/settings/users': typeof SettingsUsersRouteWithChildren
  '/funds': typeof FundsIndexRoute
  '/investments': typeof InvestmentsIndexRoute
  '/funds/$name/cash-flow': typeof FundsNameCashFlowRoute
  '/funds/$name/dashboard': typeof FundsNameDashboardRoute
  '/funds/$name/documents': typeof FundsNameDocumentsRoute
  '/funds/$name/investments': typeof FundsNameInvestmentsRoute
  '/funds/$name/key-info': typeof FundsNameKeyInfoRoute
  '/investments/$name/company-performance': typeof InvestmentsNameCompanyPerformanceRoute
  '/investments/$name/dashboard': typeof InvestmentsNameDashboardRoute
  '/investments/$name/data-collection': typeof InvestmentsNameDataCollectionRoute
  '/investments/$name/deal-team-highlights': typeof InvestmentsNameDealTeamHighlightsRouteWithChildren
  '/investments/$name/documents': typeof InvestmentsNameDocumentsRoute
  '/investments/$name/investment-summary': typeof InvestmentsNameInvestmentSummaryRoute
  '/investments/$name/reports': typeof InvestmentsNameReportsRoute
  '/investments/$name/shareholders-structure': typeof InvestmentsNameShareholdersStructureRoute
  '/investments/$name/valuation': typeof InvestmentsNameValuationRoute
  '/settings/users/by-role': typeof SettingsUsersByRoleRoute
  '/settings/users/by-user': typeof SettingsUsersByUserRoute
  '/settings/users/invite': typeof SettingsUsersInviteRoute
  '/funds/$name': typeof FundsNameIndexRoute
  '/investments/$name': typeof InvestmentsNameIndexRoute
  '/investments/$name/deal-team-highlights/new': typeof InvestmentsNameDealTeamHighlightsNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/ai': typeof AiRoute
  '/funds': typeof FundsRouteWithChildren
  '/investments': typeof InvestmentsRouteWithChildren
  '/settings': typeof SettingsRouteWithChildren
  '/funds/$name': typeof FundsNameRouteWithChildren
  '/investments/$name': typeof InvestmentsNameRouteWithChildren
  '/settings/audit-logs': typeof SettingsAuditLogsRoute
  '/settings/billing': typeof SettingsBillingRoute
  '/settings/funds': typeof SettingsFundsRoute
  '/settings/investments': typeof SettingsInvestmentsRoute
  '/settings/labels': typeof SettingsLabelsRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/settings/portfolio-companies': typeof SettingsPortfolioCompaniesRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/roles': typeof SettingsRolesRoute
  '/settings/security': typeof SettingsSecurityRoute
  '/settings/theming': typeof SettingsThemingRoute
  '/settings/users': typeof SettingsUsersRouteWithChildren
  '/funds/': typeof FundsIndexRoute
  '/investments/': typeof InvestmentsIndexRoute
  '/funds/$name/cash-flow': typeof FundsNameCashFlowRoute
  '/funds/$name/dashboard': typeof FundsNameDashboardRoute
  '/funds/$name/documents': typeof FundsNameDocumentsRoute
  '/funds/$name/investments': typeof FundsNameInvestmentsRoute
  '/funds/$name/key-info': typeof FundsNameKeyInfoRoute
  '/investments/$name/company-performance': typeof InvestmentsNameCompanyPerformanceRoute
  '/investments/$name/dashboard': typeof InvestmentsNameDashboardRoute
  '/investments/$name/data-collection': typeof InvestmentsNameDataCollectionRoute
  '/investments/$name/deal-team-highlights': typeof InvestmentsNameDealTeamHighlightsRouteWithChildren
  '/investments/$name/documents': typeof InvestmentsNameDocumentsRoute
  '/investments/$name/investment-summary': typeof InvestmentsNameInvestmentSummaryRoute
  '/investments/$name/reports': typeof InvestmentsNameReportsRoute
  '/investments/$name/shareholders-structure': typeof InvestmentsNameShareholdersStructureRoute
  '/investments/$name/valuation': typeof InvestmentsNameValuationRoute
  '/settings/users/by-role': typeof SettingsUsersByRoleRoute
  '/settings/users/by-user': typeof SettingsUsersByUserRoute
  '/settings/users/invite': typeof SettingsUsersInviteRoute
  '/funds/$name/': typeof FundsNameIndexRoute
  '/investments/$name/': typeof InvestmentsNameIndexRoute
  '/investments/$name/deal-team-highlights/new': typeof InvestmentsNameDealTeamHighlightsNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/ai'
    | '/funds'
    | '/investments'
    | '/settings'
    | '/funds/$name'
    | '/investments/$name'
    | '/settings/audit-logs'
    | '/settings/billing'
    | '/settings/funds'
    | '/settings/investments'
    | '/settings/labels'
    | '/settings/notifications'
    | '/settings/portfolio-companies'
    | '/settings/profile'
    | '/settings/roles'
    | '/settings/security'
    | '/settings/theming'
    | '/settings/users'
    | '/funds/'
    | '/investments/'
    | '/funds/$name/cash-flow'
    | '/funds/$name/dashboard'
    | '/funds/$name/documents'
    | '/funds/$name/investments'
    | '/funds/$name/key-info'
    | '/investments/$name/company-performance'
    | '/investments/$name/dashboard'
    | '/investments/$name/data-collection'
    | '/investments/$name/deal-team-highlights'
    | '/investments/$name/documents'
    | '/investments/$name/investment-summary'
    | '/investments/$name/reports'
    | '/investments/$name/shareholders-structure'
    | '/investments/$name/valuation'
    | '/settings/users/by-role'
    | '/settings/users/by-user'
    | '/settings/users/invite'
    | '/funds/$name/'
    | '/investments/$name/'
    | '/investments/$name/deal-team-highlights/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/ai'
    | '/settings'
    | '/settings/audit-logs'
    | '/settings/billing'
    | '/settings/funds'
    | '/settings/investments'
    | '/settings/labels'
    | '/settings/notifications'
    | '/settings/portfolio-companies'
    | '/settings/profile'
    | '/settings/roles'
    | '/settings/security'
    | '/settings/theming'
    | '/settings/users'
    | '/funds'
    | '/investments'
    | '/funds/$name/cash-flow'
    | '/funds/$name/dashboard'
    | '/funds/$name/documents'
    | '/funds/$name/investments'
    | '/funds/$name/key-info'
    | '/investments/$name/company-performance'
    | '/investments/$name/dashboard'
    | '/investments/$name/data-collection'
    | '/investments/$name/deal-team-highlights'
    | '/investments/$name/documents'
    | '/investments/$name/investment-summary'
    | '/investments/$name/reports'
    | '/investments/$name/shareholders-structure'
    | '/investments/$name/valuation'
    | '/settings/users/by-role'
    | '/settings/users/by-user'
    | '/settings/users/invite'
    | '/funds/$name'
    | '/investments/$name'
    | '/investments/$name/deal-team-highlights/new'
  id:
    | '__root__'
    | '/'
    | '/ai'
    | '/funds'
    | '/investments'
    | '/settings'
    | '/funds/$name'
    | '/investments/$name'
    | '/settings/audit-logs'
    | '/settings/billing'
    | '/settings/funds'
    | '/settings/investments'
    | '/settings/labels'
    | '/settings/notifications'
    | '/settings/portfolio-companies'
    | '/settings/profile'
    | '/settings/roles'
    | '/settings/security'
    | '/settings/theming'
    | '/settings/users'
    | '/funds/'
    | '/investments/'
    | '/funds/$name/cash-flow'
    | '/funds/$name/dashboard'
    | '/funds/$name/documents'
    | '/funds/$name/investments'
    | '/funds/$name/key-info'
    | '/investments/$name/company-performance'
    | '/investments/$name/dashboard'
    | '/investments/$name/data-collection'
    | '/investments/$name/deal-team-highlights'
    | '/investments/$name/documents'
    | '/investments/$name/investment-summary'
    | '/investments/$name/reports'
    | '/investments/$name/shareholders-structure'
    | '/investments/$name/valuation'
    | '/settings/users/by-role'
    | '/settings/users/by-user'
    | '/settings/users/invite'
    | '/funds/$name/'
    | '/investments/$name/'
    | '/investments/$name/deal-team-highlights/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AiRoute: typeof AiRoute
  FundsRoute: typeof FundsRouteWithChildren
  InvestmentsRoute: typeof InvestmentsRouteWithChildren
  SettingsRoute: typeof SettingsRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AiRoute: AiRoute,
  FundsRoute: FundsRouteWithChildren,
  InvestmentsRoute: InvestmentsRouteWithChildren,
  SettingsRoute: SettingsRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/ai",
        "/funds",
        "/investments",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/ai": {
      "filePath": "ai.tsx"
    },
    "/funds": {
      "filePath": "funds.tsx",
      "children": [
        "/funds/$name",
        "/funds/"
      ]
    },
    "/investments": {
      "filePath": "investments.tsx",
      "children": [
        "/investments/$name",
        "/investments/"
      ]
    },
    "/settings": {
      "filePath": "settings.tsx",
      "children": [
        "/settings/audit-logs",
        "/settings/billing",
        "/settings/funds",
        "/settings/investments",
        "/settings/labels",
        "/settings/notifications",
        "/settings/portfolio-companies",
        "/settings/profile",
        "/settings/roles",
        "/settings/security",
        "/settings/theming",
        "/settings/users"
      ]
    },
    "/funds/$name": {
      "filePath": "funds/$name.tsx",
      "parent": "/funds",
      "children": [
        "/funds/$name/cash-flow",
        "/funds/$name/dashboard",
        "/funds/$name/documents",
        "/funds/$name/investments",
        "/funds/$name/key-info",
        "/funds/$name/"
      ]
    },
    "/investments/$name": {
      "filePath": "investments/$name.tsx",
      "parent": "/investments",
      "children": [
        "/investments/$name/company-performance",
        "/investments/$name/dashboard",
        "/investments/$name/data-collection",
        "/investments/$name/deal-team-highlights",
        "/investments/$name/documents",
        "/investments/$name/investment-summary",
        "/investments/$name/reports",
        "/investments/$name/shareholders-structure",
        "/investments/$name/valuation",
        "/investments/$name/"
      ]
    },
    "/settings/audit-logs": {
      "filePath": "settings/audit-logs.tsx",
      "parent": "/settings"
    },
    "/settings/billing": {
      "filePath": "settings/billing.tsx",
      "parent": "/settings"
    },
    "/settings/funds": {
      "filePath": "settings/funds.tsx",
      "parent": "/settings"
    },
    "/settings/investments": {
      "filePath": "settings/investments.tsx",
      "parent": "/settings"
    },
    "/settings/labels": {
      "filePath": "settings/labels.tsx",
      "parent": "/settings"
    },
    "/settings/notifications": {
      "filePath": "settings/notifications.tsx",
      "parent": "/settings"
    },
    "/settings/portfolio-companies": {
      "filePath": "settings/portfolio-companies.tsx",
      "parent": "/settings"
    },
    "/settings/profile": {
      "filePath": "settings/profile.tsx",
      "parent": "/settings"
    },
    "/settings/roles": {
      "filePath": "settings/roles.tsx",
      "parent": "/settings"
    },
    "/settings/security": {
      "filePath": "settings/security.tsx",
      "parent": "/settings"
    },
    "/settings/theming": {
      "filePath": "settings/theming.tsx",
      "parent": "/settings"
    },
    "/settings/users": {
      "filePath": "settings/users.tsx",
      "parent": "/settings",
      "children": [
        "/settings/users/by-role",
        "/settings/users/by-user",
        "/settings/users/invite"
      ]
    },
    "/funds/": {
      "filePath": "funds/index.tsx",
      "parent": "/funds"
    },
    "/investments/": {
      "filePath": "investments/index.tsx",
      "parent": "/investments"
    },
    "/funds/$name/cash-flow": {
      "filePath": "funds/$name/cash-flow.tsx",
      "parent": "/funds/$name"
    },
    "/funds/$name/dashboard": {
      "filePath": "funds/$name/dashboard.tsx",
      "parent": "/funds/$name"
    },
    "/funds/$name/documents": {
      "filePath": "funds/$name/documents.tsx",
      "parent": "/funds/$name"
    },
    "/funds/$name/investments": {
      "filePath": "funds/$name/investments.tsx",
      "parent": "/funds/$name"
    },
    "/funds/$name/key-info": {
      "filePath": "funds/$name/key-info.tsx",
      "parent": "/funds/$name"
    },
    "/investments/$name/company-performance": {
      "filePath": "investments/$name/company-performance.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/dashboard": {
      "filePath": "investments/$name/dashboard.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/data-collection": {
      "filePath": "investments/$name/data-collection.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/deal-team-highlights": {
      "filePath": "investments/$name/deal-team-highlights.tsx",
      "parent": "/investments/$name",
      "children": [
        "/investments/$name/deal-team-highlights/new"
      ]
    },
    "/investments/$name/documents": {
      "filePath": "investments/$name/documents.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/investment-summary": {
      "filePath": "investments/$name/investment-summary.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/reports": {
      "filePath": "investments/$name/reports.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/shareholders-structure": {
      "filePath": "investments/$name/shareholders-structure.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/valuation": {
      "filePath": "investments/$name/valuation.tsx",
      "parent": "/investments/$name"
    },
    "/settings/users/by-role": {
      "filePath": "settings/users/by-role.tsx",
      "parent": "/settings/users"
    },
    "/settings/users/by-user": {
      "filePath": "settings/users/by-user.tsx",
      "parent": "/settings/users"
    },
    "/settings/users/invite": {
      "filePath": "settings/users/invite.tsx",
      "parent": "/settings/users"
    },
    "/funds/$name/": {
      "filePath": "funds/$name/index.tsx",
      "parent": "/funds/$name"
    },
    "/investments/$name/": {
      "filePath": "investments/$name/index.tsx",
      "parent": "/investments/$name"
    },
    "/investments/$name/deal-team-highlights/new": {
      "filePath": "investments/$name/deal-team-highlights/new.tsx",
      "parent": "/investments/$name/deal-team-highlights"
    }
  }
}
ROUTE_MANIFEST_END */
